# one Role gives access to services & ingresses in the same namespace as the exposecontroller is running
# other Role gives access to the services in the default namespace

apiVersion: v1
kind: ServiceAccount
metadata:
  name: int-exposecontroller
  namespace: internal
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  # name + namespace + "role"
  name: int-exposecontroller-internal-role
  namespace: internal
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - get
      - update
      - patch
      - watch
  - apiGroups:
      - ""
      - "extensions"
    resources:
      - ingresses
    verbs:
      - list
      - get
      - create
      - update
      - patch
      - delete
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: int-exposecontroller-internal-role-binding
  namespace: internal
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: int-exposecontroller-internal-role
subjects:
  - kind: ServiceAccount
    name: int-exposecontroller
    namespace: internal
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: int-exposecontroller-default-role
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - list
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: int-exposecontroller-default-role-binding
  # This only grants permissions within the "default" namespace.
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: int-exposecontroller-default-role
subjects:
  - kind: ServiceAccount
    name: int-exposecontroller
    namespace: internal